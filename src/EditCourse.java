
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Subhakshi Sharma
 */
public class EditCourse extends javax.swing.JFrame {
Connection con=null;
  Statement pst=null;
  ResultSet rs=null;
  public void selectionall() throws SQLException{
    try {

             con= DriverManager.getConnection("jdbc:derby://localhost:1527/coaching","sakshi","2896");       
             pst = con.createStatement();
             rs=pst.executeQuery("select * from SAKSHI.COURSE");
             editcoursetable.setModel(DbUtils.resultSetToTableModel(rs));
    } catch (SQLException ex) {
        ex.printStackTrace();    
    } }
    /**
     * Creates new form EditCourse
     */
    public EditCourse() throws Exception{
        initComponents();
        selectionall();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editcoursetable = new javax.swing.JTable();
        update = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        courseid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        coursename = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        coursefees = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        courseduration = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        report = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("EDIT COURSE");

        editcoursetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "COURSE ID", "COURSE NAME", "COURSE FEES", "COURSE DURATION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        editcoursetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editcoursetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(editcoursetable);

        update.setBackground(new java.awt.Color(102, 204, 0));
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        jLabel2.setText("COURSE ID");

        courseid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                courseidKeyReleased(evt);
            }
        });

        jLabel3.setText("COURSE NAME");

        coursename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                coursenameKeyReleased(evt);
            }
        });

        jLabel4.setText("COURSE FEES");

        coursefees.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                coursefeesKeyReleased(evt);
            }
        });

        jLabel5.setText("COURSE DURATION");

        courseduration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coursedurationActionPerformed(evt);
            }
        });
        courseduration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                coursedurationKeyReleased(evt);
            }
        });

        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 102, 102));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        report.setText("REPORT");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        print.setText("PRINT");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setRows(5);
        jScrollPane3.setViewportView(area);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(courseid, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel5)))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(courseduration, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coursefees, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coursename, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(update)
                                .addGap(79, 79, 79)
                                .addComponent(back)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(report, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(328, 368, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(logout)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coursename, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(coursefees, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseduration, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(update)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(back)
                        .addComponent(delete)
                        .addComponent(report)
                        .addComponent(print)))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
HomePage hp=new HomePage();
hp.setVisible(true);
this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutActionPerformed

    private void courseidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_courseidKeyReleased
        //lbl_courseid.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_courseidKeyReleased

    private void coursenameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coursenameKeyReleased
        //lbl_coursename.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_coursenameKeyReleased

    private void coursefeesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coursefeesKeyReleased
       // lbl_coursefees.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_coursefeesKeyReleased

    private void coursedurationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coursedurationKeyReleased
       // lbl_courseduration.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_coursedurationKeyReleased

    private void coursedurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coursedurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coursedurationActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
   /*try{
       String sql="update SAKSHI.COURSE set coursename='"+coursename.getText()+"',fees='"+coursefees.getText()+"',duration='"+courseduration.getText()+"' where courseid='"+courseid.getText()+"'";
      Statement update=con.createStatement();
      update.executeUpdate(sql);
   } catch (SQLException ex) {
        Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
    }
    try {
        selectionall();*/
        /*try{
        String CID=courseid.getText();
        String NAME=coursename.getText();
        String FEES=coursefees.getText();
        String DURATION=courseduration.getText();
        String sql="Update SAKSHI.COURSE set courseid='"+CID+"','"+NAME+"','"+FEES+"','"+DURATION+"'";
        Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/coaching [sakshi on SAKSHI]","sakshi","2896");
        PreparedStatement pst=con.prepareStatement(sql);
        pst.executeUpdate(sql);
        } catch (SQLException ex) {
        Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
        
         /* int i=editcoursetable.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel)editcoursetable.getModel();
        if(i>=0)
        {
        model.setValueAt(courseid.getText(),i,0);
        model.setValueAt(coursename.getText(),i,1);
        model.setValueAt(coursefees.getText(),i,2);
        model.setValueAt(courseduration.getText(),i,3);
        JOptionPane.showMessageDialog(null,"successfully updated");
        }else{
        JOptionPane.showMessageDialog(null,"unsuccessful");
        }
        */
        // TODO add your handling code here:
        
        try{
        con= DriverManager.getConnection("jdbc:derby://localhost:1527/coaching","sakshi","2896");
        PreparedStatement ps=con.prepareStatement("update COURSE set COURSENAME=?,FEES=?,DURATION=? where COURSEID=?");
        ps.setString(1,coursename.getText());
        ps.setString(2,coursefees.getText());
        ps.setString(3,courseduration.getText());
        ps.setString(4,courseid.getText());
        ps.executeUpdate();       
        con= DriverManager.getConnection("jdbc:derby://localhost:1527/coaching","sakshi","2896");       
             pst = con.createStatement();
             rs=pst.executeQuery("select * from SAKSHI.COURSE");
             editcoursetable.setModel(DbUtils.resultSetToTableModel(rs));
              JOptionPane.showMessageDialog(null,"Record Updated");
        
    
        //ex.printStackTrace();    
        }        
        catch(SQLException e){        
        System.out.println("Exception in Update button"+e);
        } 
    
        
        
    
    
    }//GEN-LAST:event_updateActionPerformed

    private void editcoursetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editcoursetableMouseClicked
       int selectRow=editcoursetable.getSelectedRow();
       DefaultTableModel model=(DefaultTableModel)editcoursetable.getModel();
       courseid.setText(model.getValueAt(selectRow,0).toString());
       coursename.setText(model.getValueAt(selectRow,1).toString());
       coursefees.setText(model.getValueAt(selectRow,2).toString());
       courseduration.setText(model.getValueAt(selectRow,3).toString());
       
        // TODO add your handling code here:
    }//GEN-LAST:event_editcoursetableMouseClicked

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
      ViewCourse vc = null;
    try {
        vc = new ViewCourse();
    } catch (SQLException ex) {
        Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
    }
      vc.setVisible(true);
      this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
    try{
        String sql="Delete from SAKSHI.COURSE where courseid ="+courseid.getText();
        Statement st=con.createStatement();
        st.executeUpdate(sql);
        
    } catch (SQLException ex) {
        Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
    }
    try {
        selectionall();
        /* DefaultTableModel model= (DefaultTableModel) editcoursetable.getModel();
        try{
        int SelectedRowIndex=editcoursetable.getSelectedRow();
        model.removeRow(SelectedRowIndex);
        courseid.setText("");
        coursename.setText("");
        coursefees.setText("");
        courseduration.setText("");
        JOptionPane.showMessageDialog(null,"deleted successfully");
        }catch(Exception e){
        JOptionPane.showMessageDialog(null,"deletion unsuccessfull");
        }*/
        
        // TODO add your handling code here:
    } catch (SQLException ex) {
        Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
    }
    courseid.setText("");
    coursename.setText("");
    coursefees.setText("");
    courseduration.setText("");
    }//GEN-LAST:event_deleteActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        area.setText(area.getText()+"                                           REPORT               \n");
        area.setText(area.getText()+"COURSE ID   :" +courseid.getText()+"\n\n");
        area.setText(area.getText()+"COURSE NAME         :" +coursename.getText()+"\n\n");
        area.setText(area.getText()+"COURSE FEES   :" +coursefees.getText()+"\n\n");
        area.setText(area.getText()+"COURSE DURATION      :" +courseduration.getText()+"\n\n");
        //area.setText(area.getText()+"ADDRESS      :" +address.getText()+"\n\n");
       // area.setText(area.getText()+"COURSE ID       :" +courseid.getText()+"\n\n");
        //area.setText(area.getText()+"FEES PAID   :" +feespaid.getText()+"\n\n");
        //area.setText(area.getText()+"FEES LEFT   :" +feesleft.getText()+"\n\n");

        // TODO add your handling code here:
    }//GEN-LAST:event_reportActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
    try {
        area.print();
        // TODO add your handling code here:
    } catch (PrinterException ex) {
        Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EditCourse().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(EditCourse.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton back;
    private javax.swing.JTextField courseduration;
    private javax.swing.JTextField coursefees;
    private javax.swing.JTextField courseid;
    private javax.swing.JTextField coursename;
    private javax.swing.JButton delete;
    private javax.swing.JTable editcoursetable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logout;
    private javax.swing.JButton print;
    private javax.swing.JButton report;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
